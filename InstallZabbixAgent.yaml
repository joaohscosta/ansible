---
- hosts: all
  tasks:
    ### Pridame centos zabbix repository
    - name: Install Zabbix Repo - CENTOS 7
      yum:
       name: https://repo.zabbix.com/zabbix/5.0/rhel/7/x86_64/zabbix-release-5.0-1.el7.noarch.rpm
       state: present
       allow_downgrade: yes
      when: (ansible_facts['distribution'] == "CentOS" or ansible_facts['distribution'] == "Red Hat Enterprise Linux" or ansible_facts['distribution'] == "OracleLinux") and
            (ansible_facts['architecture'] == "x86_64" and ansible_facts['distribution_major_version'] == "7")

    - name: Install Zabbix Repo - CENTOS 8
      yum:
       name: https://repo.zabbix.com/zabbix/5.0/rhel/8/x86_64/zabbix-release-5.0-1.el8.noarch.rpm
       state: present
       allow_downgrade: yes
      when: (ansible_facts['distribution'] == "CentOS" or ansible_facts['distribution'] == "Red Hat Enterprise Linux" or ansible_facts['distribution'] == "OracleLinux") and
            (ansible_facts['architecture'] == "x86_64" and ansible_facts['distribution_major_version'] == "8")



    - name: Install Zabbix Repo - UBUNTU
      apt:
       deb: https://repo.zabbix.com/zabbix/5.0/ubuntu/pool/main/z/zabbix-release/zabbix-release_5.0-1%2Bbionic_all.deb
       force: yes
      when: (ansible_facts['distribution'] == "Ubuntu") and
            (ansible_facts['architecture'] == "x86_64")

    - name: Clean all packages
      command: yum clean all
      when: (ansible_facts['distribution'] == "CentOS" or ansible_facts['distribution'] == "Red Hat Enterprise Linux" or ansible_facts['distribution'] == "OracleLinux") 

    - name: Install zabbix agent - CENTOS
      yum:
       name: zabbix-agent
       state: present
      when: (ansible_facts['distribution'] == "CentOS" or ansible_facts['distribution'] == "Red Hat Enterprise Linux" or ansible_facts['distribution'] == "OracleLinux")

    - name: Install zabbix agent - UBUNTU
      apt:
       name: zabbix-agent
       state: latest
       update_cache: yes
       install_recommends: no
       dpkg_options: 'force-confdef,force-confold'
      when: (ansible_facts['distribution'] == "Ubuntu") and
            (ansible_facts['architecture'] == "x86_64")

    - name: Enable zabbix service
      systemd:
       name: zabbix-agent
       enabled: yes

    - name: ALTER ZABBIX AGENT - HOSTNAME
      lineinfile:
        dest: /etc/zabbix/zabbix_agentd.conf
        regexp: ^Hostname=.*
        insertafter: ^# Hostname=
        line: Hostname={{ ansible_hostname|upper }}  

   ### Nastavime IP adresu zabbix servera/proxy
    - name: ALTER ZABBIX AGENT - SERVER
      lineinfile:
        dest: /etc/zabbix/zabbix_agentd.conf
        regexp: ^Server=.*
        insertafter: ^# Server=
        line: Server=192.168.11.9

    ### Nastavime IP adresu active zabbix servera/proxy
    - name: ALTER ZABBIX AGENT - SERVERACTIVE
      lineinfile:
        dest: /etc/zabbix/zabbix_agentd.conf
        regexp: ^ServerActive=.*
        insertafter: ^# ServerActive=
        line: ServerActive=192.168.10.9

     ### Zvysime default Timeout pre spusatanie externych skriptov
    - name: ALTER ZABBIX AGENT - TIMEOUT
      lineinfile:
        dest: /etc/zabbix/zabbix_agentd.conf
        regexp: ^Timeout=.*
        insertafter: ^# Timeout=
        line: Timeout=30

     ### Restartneme agent po zmenach
    - name: Restart zabbix-agent - SYSTEMD
      systemd:
       name: zabbix-agent
       state: restarted
      when: (ansible_facts['service_mgr'] == "systemd")

    - name: Restart zabbix-agent - BSDInit
      service:
       name: zabbix_agentd
       state: restarted
      when: (ansible_facts['service_mgr'] == "bsdinit")

    - name: Create a new host or update an existing host's info
      local_action:
         module: zabbix_host
         server_url: http://192.168.11.9/zabbix
         login_user: srv_ansible
         login_password: QWM5rEhb26sJ2keY
         host_name: "{{ ansible_hostname|upper }}"
         visible_name: "{{ ansible_hostname|upper }}"
         description: 
         host_groups:
             - Servers Linux
         link_templates:
             - Template OS Linux
         status: enabled
         interfaces:
             - type: 1
               main: 1
               useip: 1
               ip:  "{{ ansible_default_ipv4.address}}"
               dns: "{{ ansible_hostname|upper }}"
               port: 10050
